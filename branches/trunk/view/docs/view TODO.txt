FUNCTIONALITY:
* Account for array capacity when drawing arrays
* Integrate dsAction and write dsAction subclasses
* Other types of view object types (see ViewableObjectsType defined in common.h for other types)
* MACROS for pausing/resuming drawing 
		i.e. user pauses, performs 3 DS actions, resumes and results of all 3 actions appear in one world transition
* UI Stuff for Viewer:
	(zoom in on VO, move VO, suppress VO etc.)
  Also, we need to consider how to manage the huge number of VOs - this will most likely involve having
     a huge Displayer resolution and a lot of horizontal/vertical scrolling
	
* Some sort of Control Panel which lists all ViewableObjects (whether suppressed or not)
* Animations and textual descriptions (subtitles) for actions - perhaps we should represent actions
	as classes? Sort of like what we did for team project.
  We may want to visually indicate array reads as well, for some algorithms
		
		
		
DESIGN/ADMIN/CODING:
* Implement a Linux version of our view which isn't a Windows DLL
* Perhaps we should start using smart pointers. We have to be very careful when it comes to destroying
ViewableObjects as the Registry, World and Displayer objects all maintain raw pointers to them


BUGS/MISC:
* Make this start-up and shutdown gracefully with guarantee
* Figure out what's up with the glut of SP registrations after vector sorting finishes